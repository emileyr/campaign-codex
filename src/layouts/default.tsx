import { type NextPage } from "next";
import { useSession, signIn, signOut } from "next-auth/react";
import Head from "next/head";
import React, { useEffect, useMemo } from "react";

const SessionVerifiedGate = ({ children }: { children: React.ReactNode }) => {
  const session = useSession();
  useEffect(() => {
    if (session.status !== "unauthenticated") return;
    void signIn();
  }, [session.status]);

  if (session.status === "unauthenticated") return <></>;

  if (session.status === "loading" || !session.data) {
    return (
      <div className="flex flex-col items-center justify-center p-2 text-center">
        <h1 className="text-5xl font-extrabold tracking-tight text-[hsl(280,100%,70%)] sm:text-[5rem]">
          Loading...
        </h1>
      </div>
    );
  }

  if (!session.data.user.isVerified) {
    return (
      <div className="flex flex-col items-center justify-center p-2 text-center">
        <h1 className="text-3xl font-extrabold tracking-tight text-[hsl(280,100%,70%)] sm:text-5xl">
          Account has not been verified
        </h1>
      </div>
    );
  }
  return <>{children}</>;
};

export const DefaultLayout = ({ children }: { children: React.ReactNode }) => {
  return <SessionVerifiedGate>{children}</SessionVerifiedGate>;
};

export const DefaultHead = ({ title: rawTitle }: { title?: string }) => {
  const title = useMemo(() => {
    const base = "Campaign Codex";
    if (!rawTitle) return base;
    return `${rawTitle} â€¢ ${base}`;
  }, [rawTitle]);

  return (
    <Head>
      <title>{title}</title>
      <meta name="description" content="Generated by create-t3-app" />
      <link rel="icon" href="/favicon.ico" />
    </Head>
  );
};
